@page
@using Htmx.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using CodeMechanic.Embeds
@model IndexModel
@* @inject IRazorRoutesService routes_service *@
@inject IEmbeddedResourceQuery embeds_service
@{
    // var all_pages = routes_service.GetAllRoutes();

    // string file_name = "BuildByName.cypher";
    // string query = (embeds_service as EmbeddedResourceService).GetFileContents<IndexModel>(file_name);
    // string query2 = (embeds_service as EmbeddedResourceService).GetFileContents<IndexModel>("BuildsLiked.cypher");

    // Console.WriteLine("builds liked: " + query2);
    // Console.WriteLine("builds by name: " + query);
}

<style>
    table {
            /*z-index: unset !important;*/
            z-index: 0 !important;
    }
</style>
<div theme-data="autumn" class="border-2 border-primary-400">
    <section x-data="setup()" class="flex flex-row z-0">

        <div class="h-screen w-4/6">

            @* swap example  *@
            <template x-cloak x-if="card_options.dev_mode">

                <div
                    x-transition>

                    <label
                        class="swap">
                        <input type="checkbox"/>
                        <div class="swap-on">BLUE</div>
                        <div class="swap-off">RED</div>
                    </label>

                    <pre x-text="view_mode"></pre>
                    <pre x-text="vals_to_include"></pre>

                </div>

            </template>

            <partial name="NotificationsPanel" model="null"/>

            <table
                class="m-2 table table-zebra border-0 border-red-700 ">
                <thead>
                <tr>

                    <th scope="row" class="col-span-4 border-2">

                        <div class="join flex-row flex">
                            <div>
                                <div hx-ext="include-vals">

                                    <input class="input input-bordered join-item"
                                           type="text" name="term" id="query" autocomplete="off"
                                           hx-get
                                           hx-page="Index"
                                           :include-vals="vals_to_include()"
                                           hx-page-handler="SearchByRegex"
                                           hx-target="#search_results"
                                           hx-swap="innerHTML"
                                           hx-trigger="keyup changed delay:250ms"
                                           hx-indicator="#loading"
                                           aria-label="SEARCH"
                                           :placeholder="search_placeholder"
                                           aria-describedby="search-addon"/>
                                </div>
                            </div>
                            <select class="select select-bordered join-item">
                                <option disabled selected>Category</option>
                                <template x-cloak x-for="cat in categories">
                                    <option x-text="cat" :value="cat"></option>
                                </template>
                            </select>
                            <div class="indicator">
                                <span class="indicator-item badge badge-secondary">new</span>
                                <button class="btn join-item rounded-r-full">
                                    <h1 x-on:mouseover="hacky_text"
                                        :data-value="search_button_text">
                                        Search
                                    </h1>
                                </button>

                                <button x-show="card_options.dev_mode" x-transition
                                        class="btn btn-accent hover:scale-125">
                                    <h1 x-on:mouseover="hacky_text" :data-value="search_button_text">
                                        Start Searching
                                    </h1>
                                </button>
                            </div>

                        </div>
                        @*
                    <input type="text" name="term" id="query" autocomplete="off"
                           hx-get
                           hx-page="Index"
                           hx-page-handler="SearchByRegex"
                           hx-target="#search_results"
                           hx-swap="innerHTML"
                           hx-trigger="keyup changed delay:250ms"
                           hx-indicator="#loading"
                           class="input input-bordered input-ghost"
                           aria-label="SEARCH"
                           :placeholder="search_placeholder"
                           aria-describedbyx-init="search-addon"/>
                    <div class="htmx-indicator" id='loading'>loading...</div>
                    *@
                        <div class="htmx-indicator" id='loading'>loading...</div>
                    </th>


                </tr>
                @* <tr> *@
                @*     $1$ <th>Id</th> #1# *@
                @*     <th>Title</th> *@
                @*     <th>Link</th> *@
                @*     <th>Excerpt</th> *@
                @*     $1$ <th>Content</th> #1# *@
                @*     $1$ <th>Status</th> #1# *@
                @*     $1$ <th>Author</th> #1# *@
                @*     $1$ <th>Categories</th> #1# *@
                @* </tr> *@
                </thead>
                <tbody id='search_results'>
                </tbody>

            </table>
        </div>

        <div class="w-2/6 m-2 hero bg-base-200 border-2 border-accent">
            <div class="hero-content flex flex-col lg:flex-col">
                
                <partial name="_UserAvatar" model="@Model.CurrentUser"/>
                <partial name="_AccordionPanel" />
                <partial name="_CardOptionsPanel" model="@Model.CardOptions"/>
               
                @await Html.PartialAsync("_RecommendationsPanel"
                    , Enumerable.Empty<Paper>().ToList())
            </div>

        </div>

    </section>



</div>
<script>
    
    const VIEWS = {
      LIST_MODE: "_PaperList",
      GRID_MODE: "_PaperTable"
    }

    function setup() {
      return {
        view_mode: VIEWS.LIST_MODE,
        // message: '_PaperList',
        show_modal: true,
        search_placeholder: "E.g.: 'What is Faith?'",
        search_button_text: "Search for Papers",
        // card_options: {
        //     case_insensitive: true,
        //     ignore_whitespace: false,
        //     ignore_special_characters: false,
        //     // dev_mode: false            
        // },
        categories: [
            'Faith',
            'Obedience',
            'Israel',
            'Sin',
            'Religion',
            'Tithes & Offerings',
        ],
        
        vals_to_include() {
           return `partial_name: '${this.view_mode}'`          
        }      
      }; 
    }
  </script>