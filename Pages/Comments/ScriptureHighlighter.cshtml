@using Htmx.TagHelpers
@using TPOT_Links.Services
@model List<TPOT_Links.Models.Scripture>
@inject ScriptureParser scriptureParser
@{
    // C# vars go here!
    var scriptures = Model;
}

<div
    x-data='scripture_highlighter_setup()'>


    <div>
        <h1 class="text-red-500" x-text="foo"></h1>
        <div class="flex flex-col items-center justify-center gap-2 p-4">
            <button
                hx-get
                hx-page-handler="ExtractedScriptures"
                hx-target='#extracted'
                hx-swap="outerHTML"
                class='btn-active btn btn-md btn btn-outline-primary float-end'
                :click='btn_width = 4; loading=true'
                :class="loading_button"
                type='submit'>
                <span x-show="loading" class="htmx-indicator">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    <span class="visually-hidden">Loading...</span>
                </span>
                Run Parse
            </button>

            <div id='extracted'></div>
        </div>

    </div>

</div>

<script>
    function scripture_highlighter_setup() {
      return {
        loading: false,
        foo:'bar',
        get loading_button() {
            let is_loading = this.loading ? 'loading' : '';
            return `${is_loading} btn btn-accent w-[${this.btn_width}rem]`;
        },
        
      };
    }
</script>